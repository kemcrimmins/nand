// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    
    // Handle the load and reset control bits
    Mux8Way16(
            // a= no control bit set; no change
            // b, d, f, h = reset bit asserted
            // c, g = load bit asserted
            // e = inc bit asserted
            a=prevOut, b=false, c=in, d=false, e=incOut, f=false,g=in,h=false,sel[0]=reset,
            sel[1]=load, sel[2]=inc, out=Mux8Way16Out);

    // increment chip for the Mux8Way16
    Inc16(in=prevOut, out=incOut);

    // Register with load asserted to act as DFF16
    Register(in=Mux8Way16Out, load=true, out=prevOut, out=out);
}
